{"ast":null,"code":"\"use strict\";var _slicedToArray=require(\"@babel/runtime/helpers/slicedToArray\");exports.__esModule=true;exports[\"default\"]=initHeadManager;var _react=require(\"react\");var DOMAttributeNames={acceptCharset:'accept-charset',className:'class',htmlFor:'for',httpEquiv:'http-equiv'};function reactElementToDOM(_ref){var type=_ref.type,props=_ref.props;var el=document.createElement(type);for(var p in props){if(!props.hasOwnProperty(p))continue;if(p==='children'||p==='dangerouslySetInnerHTML')continue;if(props[p]===undefined)continue;var attr=DOMAttributeNames[p]||p.toLowerCase();el.setAttribute(attr,props[p]);}var children=props.children,dangerouslySetInnerHTML=props.dangerouslySetInnerHTML;if(dangerouslySetInnerHTML){el.innerHTML=dangerouslySetInnerHTML.__html||'';}else if(children){el.textContent=typeof children==='string'?children:Array.isArray(children)?children.join(''):'';}return el;}function updateElements(elements,components,removeOldTags){var headEl=document.getElementsByTagName('head')[0];var oldTags=new Set(elements);components.forEach(function(tag){if(tag.type==='title'){var title='';if(tag){var children=tag.props.children;title=typeof children==='string'?children:Array.isArray(children)?children.join(''):'';}if(title!==document.title)document.title=title;return;}var newTag=reactElementToDOM(tag);var elementIter=elements.values();while(true){var _elementIter$next=elementIter.next(),done=_elementIter$next.done,value=_elementIter$next.value;if(value==null?void 0:value.isEqualNode(newTag)){oldTags[\"delete\"](value);return;}if(done){break;}}elements.add(newTag);headEl.appendChild(newTag);});oldTags.forEach(function(oldTag){if(removeOldTags){oldTag.parentNode.removeChild(oldTag);}elements[\"delete\"](oldTag);});}function initHeadManager(initialHeadEntries){var headEl=document.getElementsByTagName('head')[0];var elements=new Set(headEl.children);updateElements(elements,initialHeadEntries.map(function(_ref2){var _ref3=_slicedToArray(_ref2,2),type=_ref3[0],props=_ref3[1];return(0,_react.createElement)(type,props);}),false);var updatePromise=null;return{mountedInstances:new Set(),updateHead:function updateHead(head){var promise=updatePromise=Promise.resolve().then(function(){if(promise!==updatePromise)return;updatePromise=null;updateElements(elements,head,true);});}};}","map":{"version":3,"sources":["../../client/head-manager.ts"],"names":["DOMAttributeNames","acceptCharset","className","htmlFor","httpEquiv","el","document","props","p","attr","dangerouslySetInnerHTML","Array","children","headEl","oldTags","tag","title","newTag","reactElementToDOM","elementIter","elements","value","oldTag","updateElements","initialHeadEntries","updatePromise","mountedInstances","updateHead","head","promise","Promise"],"mappings":"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","sourcesContent":["import { createElement } from 'react'\nimport { HeadEntry } from '../next-server/lib/utils'\n\nconst DOMAttributeNames: Record<string, string> = {\n  acceptCharset: 'accept-charset',\n  className: 'class',\n  htmlFor: 'for',\n  httpEquiv: 'http-equiv',\n}\n\nfunction reactElementToDOM({ type, props }: JSX.Element): HTMLElement {\n  const el = document.createElement(type)\n  for (const p in props) {\n    if (!props.hasOwnProperty(p)) continue\n    if (p === 'children' || p === 'dangerouslySetInnerHTML') continue\n\n    // we don't render undefined props to the DOM\n    if (props[p] === undefined) continue\n\n    const attr = DOMAttributeNames[p] || p.toLowerCase()\n    el.setAttribute(attr, props[p])\n  }\n\n  const { children, dangerouslySetInnerHTML } = props\n  if (dangerouslySetInnerHTML) {\n    el.innerHTML = dangerouslySetInnerHTML.__html || ''\n  } else if (children) {\n    el.textContent =\n      typeof children === 'string'\n        ? children\n        : Array.isArray(children)\n        ? children.join('')\n        : ''\n  }\n  return el\n}\n\nfunction updateElements(\n  elements: Set<Element>,\n  components: JSX.Element[],\n  removeOldTags: boolean\n) {\n  const headEl = document.getElementsByTagName('head')[0]\n  const oldTags = new Set(elements)\n\n  components.forEach((tag) => {\n    if (tag.type === 'title') {\n      let title = ''\n      if (tag) {\n        const { children } = tag.props\n        title =\n          typeof children === 'string'\n            ? children\n            : Array.isArray(children)\n            ? children.join('')\n            : ''\n      }\n      if (title !== document.title) document.title = title\n      return\n    }\n\n    const newTag = reactElementToDOM(tag)\n    const elementIter = elements.values()\n\n    while (true) {\n      // Note: We don't use for-of here to avoid needing to polyfill it.\n      const { done, value } = elementIter.next()\n      if (value?.isEqualNode(newTag)) {\n        oldTags.delete(value)\n        return\n      }\n\n      if (done) {\n        break\n      }\n    }\n\n    elements.add(newTag)\n    headEl.appendChild(newTag)\n  })\n\n  oldTags.forEach((oldTag) => {\n    if (removeOldTags) {\n      oldTag.parentNode!.removeChild(oldTag)\n    }\n    elements.delete(oldTag)\n  })\n}\n\nexport default function initHeadManager(initialHeadEntries: HeadEntry[]) {\n  const headEl = document.getElementsByTagName('head')[0]\n  const elements = new Set<Element>(headEl.children)\n\n  updateElements(\n    elements,\n    initialHeadEntries.map(([type, props]) => createElement(type, props)),\n    false\n  )\n\n  let updatePromise: Promise<void> | null = null\n\n  return {\n    mountedInstances: new Set(),\n    updateHead: (head: JSX.Element[]) => {\n      const promise = (updatePromise = Promise.resolve().then(() => {\n        if (promise !== updatePromise) return\n\n        updatePromise = null\n        updateElements(elements, head, true)\n      }))\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"script"}