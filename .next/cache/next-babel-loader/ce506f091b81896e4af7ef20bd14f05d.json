{"ast":null,"code":"var _s=$RefreshSig$();import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{Ionicons}from'@expo/vector-icons';import*as Font from'expo-font';import*as SplashScreen from'expo-splash-screen';import*as React from'react';export default function useCachedResources(){_s();var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isLoadingComplete=_React$useState2[0],setLoadingComplete=_React$useState2[1];React.useEffect(function(){function loadResourcesAndDataAsync(){return _loadResourcesAndDataAsync.apply(this,arguments);}function _loadResourcesAndDataAsync(){_loadResourcesAndDataAsync=_asyncToGenerator(_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;SplashScreen.preventAutoHideAsync();_context.next=4;return Font.loadAsync(_objectSpread(_objectSpread({},Ionicons.font),{},{'space-mono':require(\"../assets/fonts/SpaceMono-Regular.ttf\")}));case 4:_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);console.warn(_context.t0);case 9:_context.prev=9;setLoadingComplete(true);SplashScreen.hideAsync();return _context.finish(9);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,6,9,13]]);}));return _loadResourcesAndDataAsync.apply(this,arguments);}loadResourcesAndDataAsync();},[]);return isLoadingComplete;}_s(useCachedResources,\"0i+ghLvCka4gULcqM+dfBnMXIPQ=\");","map":{"version":3,"sources":["/Users/mikevocalz/pruapp/hooks/useCachedResources.ts"],"names":["isLoadingComplete","setLoadingComplete","React","SplashScreen","Ionicons","require","console","loadResourcesAndDataAsync"],"mappings":"yjCAAA,OAAA,QAAA,KAAA,oBAAA,CACA,MAAO,GAAP,CAAA,IAAA,KAAA,WAAA,CACA,MAAO,GAAP,CAAA,YAAA,KAAA,oBAAA,CACA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CAEA,cAAe,SAAA,CAAA,kBAAA,EAA8B,MAAA,GAAA,CAAA,eAAA,CACKE,KAAK,CAALA,QAAAA,CADL,KACKA,CADL,CAAA,gBAAA,CAAA,cAAA,CAAA,eAAA,CAAA,CAAA,CAAA,CACpCF,iBADoC,CAAA,gBAAA,CAAA,CAAA,CAAA,CACjBC,kBADiB,CAAA,gBAAA,CAAA,CAAA,CAAA,CAI3CC,KAAK,CAALA,SAAAA,CAAgB,UAAM,CAAA,QAAA,CAAA,yBAAA,EAAA,CAAA,MAAA,CAAA,0BAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA,QAAA,CAAA,0BAAA,EAAA,CAAA,0BAAA,CAAA,iBAAA,CAAA,mBAAA,CAAA,IAAA,CACpB,QAAA,CAAA,OAAA,EAAA,CAAA,MAAA,CAAA,mBAAA,CAAA,IAAA,CAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,OAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,EAAA,IAAA,EAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,CAEIC,YAAY,CAAZA,oBAAAA,GAFJ,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAKU,CAAA,IAAI,CAAJ,SAAA,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,CACDC,QAAQ,CADP,IAAA,CAAA,CAAA,EAAA,CAAA,CAEJ,aAAcC,OAAO,yCAFjB,CAAA,CAAA,CALV,CAAA,IAAA,EAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,IAAA,EAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,QAAA,CAAA,EAAA,CAAA,QAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAWIC,OAAO,CAAPA,IAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAXJ,IAAA,EAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,CAaIL,kBAAkB,CAAlBA,IAAkB,CAAlBA,CACAE,YAAY,CAAZA,SAAAA,GAdJ,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,IAAA,GAAA,CAAA,IAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CADoB,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,0BAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAmBpBI,yBAAyB,GAnB3BL,CAAAA,CAAAA,EAAAA,EAsBA,MAAA,CAAA,iBAAA,CACD,C,GA3Bc,kB","sourcesContent":["import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n"]},"metadata":{},"sourceType":"module"}