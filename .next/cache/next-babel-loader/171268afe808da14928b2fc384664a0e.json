{"ast":null,"code":"\"use strict\";var _extends=require(\"@babel/runtime/helpers/extends\");function _createForOfIteratorHelper(o,allowArrayLike){var it;if(typeof Symbol===\"undefined\"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};},e:function e(_e){throw _e;},f:F};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var normalCompletion=true,didErr=false,err;return{s:function s(){it=o[Symbol.iterator]();},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e2){didErr=true;err=_e2;},f:function f(){try{if(!normalCompletion&&it[\"return\"]!=null)it[\"return\"]();}finally{if(didErr)throw err;}}};}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}exports.__esModule=true;exports[\"default\"]=resolveRewrites;var _pathMatch=_interopRequireDefault(require(\"./path-match\"));var _prepareDestination=_interopRequireDefault(require(\"./prepare-destination\"));var _normalizeTrailingSlash=require(\"../../../../client/normalize-trailing-slash\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj};}var customRouteMatcher=(0,_pathMatch[\"default\"])(true);function resolveRewrites(asPath,pages,basePath,rewrites,query,resolveHref){if(!pages.includes(asPath)){var _iterator=_createForOfIteratorHelper(rewrites),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var rewrite=_step.value;var matcher=customRouteMatcher(rewrite.source);var params=matcher(asPath);if(params){if(!rewrite.destination){break;}var destRes=(0,_prepareDestination[\"default\"])(rewrite.destination,params,query,true,rewrite.basePath===false?'':basePath);asPath=destRes.parsedDestination.pathname;_extends(query,destRes.parsedDestination.query);if(pages.includes((0,_normalizeTrailingSlash.removePathTrailingSlash)(asPath))){break;}var resolvedHref=resolveHref(asPath);if(resolvedHref!==asPath&&pages.includes(resolvedHref)){break;}}}}catch(err){_iterator.e(err);}finally{_iterator.f();}}return asPath;}","map":{"version":3,"sources":["../../../../../next-server/lib/router/utils/resolve-rewrites.ts"],"names":["customRouteMatcher","pages","matcher","rewrite","params","destRes","asPath","Object","resolvedHref","resolveHref"],"mappings":"6+CACA,GAAA,CAAA,UAAA,CAAA,sBAAA,CAAA,OAAA,gBAAA,CAAA,CACA,GAAA,CAAA,mBAAA,CAAA,sBAAA,CAAA,OAAA,yBAAA,CAAA,CAEA,GAAA,CAAA,uBAAA,CAAA,OAAA,+CAAA,C,oFAEA,IAAMA,CAAAA,kBAAkB,CAAG,CAAA,EAAA,UAAA,WAAA,EAA3B,IAA2B,CAA3B,CAEe,QAAA,CAAA,eAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,QAAA,CAAA,KAAA,CAAA,WAAA,CAOb,CACA,GAAI,CAACC,KAAK,CAALA,QAAAA,CAAL,MAAKA,CAAL,CAA6B,0CAC3B,QAD2B,YAC3B,+CAAgC,IAAhC,CAAA,OAAgC,aAC9B,GAAMC,CAAAA,OAAO,CAAGF,kBAAkB,CAACG,OAAO,CAA1C,MAAkC,CAAlC,CACA,GAAMC,CAAAA,MAAM,CAAGF,OAAO,CAAtB,MAAsB,CAAtB,CAEA,GAAA,MAAA,CAAY,CACV,GAAI,CAACC,OAAO,CAAZ,WAAA,CAA0B,CAExB,MAEF,IAAME,CAAAA,OAAO,CAAG,CAAA,EAAA,mBAAA,WAAA,EACdF,OAAO,CADO,WAAA,CAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAKdA,OAAO,CAAPA,QAAAA,GAAAA,KAAAA,CAAAA,EAAAA,CALF,QAAgB,CAAhB,CAOAG,MAAM,CAAGD,OAAO,CAAPA,iBAAAA,CAATC,QAAAA,CACAC,SAAAA,KAAAA,CAAqBF,OAAO,CAAPA,iBAAAA,CAArBE,KAAAA,EAEA,GAAIN,KAAK,CAALA,QAAAA,CAAe,CAAA,EAAA,uBAAA,CAAA,uBAAA,EAAnB,MAAmB,CAAfA,CAAJ,CAAqD,CAGnD,MAGF,CACA,GAAMO,CAAAA,YAAY,CAAGC,WAAW,CAAhC,MAAgC,CAAhC,CAEA,GAAID,YAAY,GAAZA,MAAAA,EAA2BP,KAAK,CAALA,QAAAA,CAA/B,YAA+BA,CAA/B,CAA6D,CAC3D,MAEH,CACF,CACF,CAlC4B,qDAmC7B,OAAA,CAAA,MAAA,CACD","sourcesContent":["import { ParsedUrlQuery } from 'querystring'\nimport pathMatch from './path-match'\nimport prepareDestination from './prepare-destination'\nimport { Rewrite } from '../../../../lib/load-custom-routes'\nimport { removePathTrailingSlash } from '../../../../client/normalize-trailing-slash'\n\nconst customRouteMatcher = pathMatch(true)\n\nexport default function resolveRewrites(\n  asPath: string,\n  pages: string[],\n  basePath: string,\n  rewrites: Rewrite[],\n  query: ParsedUrlQuery,\n  resolveHref: (path: string) => string\n) {\n  if (!pages.includes(asPath)) {\n    for (const rewrite of rewrites) {\n      const matcher = customRouteMatcher(rewrite.source)\n      const params = matcher(asPath)\n\n      if (params) {\n        if (!rewrite.destination) {\n          // this is a proxied rewrite which isn't handled on the client\n          break\n        }\n        const destRes = prepareDestination(\n          rewrite.destination,\n          params,\n          query,\n          true,\n          rewrite.basePath === false ? '' : basePath\n        )\n        asPath = destRes.parsedDestination.pathname!\n        Object.assign(query, destRes.parsedDestination.query)\n\n        if (pages.includes(removePathTrailingSlash(asPath))) {\n          // check if we now match a page as this means we are done\n          // resolving the rewrites\n          break\n        }\n\n        // check if we match a dynamic-route, if so we break the rewrites chain\n        const resolvedHref = resolveHref(asPath)\n\n        if (resolvedHref !== asPath && pages.includes(resolvedHref)) {\n          break\n        }\n      }\n    }\n  }\n  return asPath\n}\n"]},"metadata":{},"sourceType":"script"}