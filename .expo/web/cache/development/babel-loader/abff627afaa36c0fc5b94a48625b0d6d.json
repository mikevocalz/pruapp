{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useBackButton;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction useBackButton(ref) {\n  React.useEffect(function () {\n    var subscription = _reactNative.BackHandler.addEventListener('hardwareBackPress', function () {\n      var navigation = ref.current;\n\n      if (navigation == null) {\n        return false;\n      }\n\n      if (navigation.canGoBack()) {\n        navigation.goBack();\n        return true;\n      }\n\n      return false;\n    });\n\n    return function () {\n      return subscription.remove();\n    };\n  }, [ref]);\n}","map":{"version":3,"sources":["useBackButton.tsx"],"names":["React","subscription","navigation","ref"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIe,SAAA,aAAA,CAAA,GAAA,EAEb;AACAA,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpB,QAAMC,YAAY,GAAG,YAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,mBAAA,EAEnB,YAAM;AACJ,UAAMC,UAAU,GAAGC,GAAG,CAAtB,OAAA;;AAEA,UAAID,UAAU,IAAd,IAAA,EAAwB;AACtB,eAAA,KAAA;AACD;;AAED,UAAIA,UAAU,CAAd,SAAIA,EAAJ,EAA4B;AAC1BA,QAAAA,UAAU,CAAVA,MAAAA;AAEA,eAAA,IAAA;AACD;;AAED,aAAA,KAAA;AAfJ,KAAqB,CAArB;;AAmBA,WAAO;AAAA,aAAMD,YAAY,CAAzB,MAAaA,EAAN;AAAA,KAAP;AApBFD,GAAAA,EAqBG,CArBHA,GAqBG,CArBHA;AAsBD","sourcesContent":["import * as React from 'react';\nimport { BackHandler } from 'react-native';\nimport type { NavigationContainerRef } from '@react-navigation/core';\n\nexport default function useBackButton(\n  ref: React.RefObject<NavigationContainerRef>\n) {\n  React.useEffect(() => {\n    const subscription = BackHandler.addEventListener(\n      'hardwareBackPress',\n      () => {\n        const navigation = ref.current;\n\n        if (navigation == null) {\n          return false;\n        }\n\n        if (navigation.canGoBack()) {\n          navigation.goBack();\n\n          return true;\n        }\n\n        return false;\n      }\n    );\n\n    return () => subscription.remove();\n  }, [ref]);\n}\n"]},"metadata":{},"sourceType":"script"}