{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = EnsureSingleNavigator;\nexports.SingleNavigatorContext = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar MULTIPLE_NAVIGATOR_ERROR = \"Another navigator is already registered for this container. You likely have multiple navigators under a single \\\"NavigationContainer\\\" or \\\"Screen\\\". Make sure each navigator is under a separate \\\"Screen\\\" container. See https://reactnavigation.org/docs/nesting-navigators for a guide on nesting.\";\nvar SingleNavigatorContext = React.createContext(undefined);\nexports.SingleNavigatorContext = SingleNavigatorContext;\n\nfunction EnsureSingleNavigator(_ref) {\n  var children = _ref.children;\n  var navigatorKeyRef = React.useRef();\n  var value = React.useMemo(function () {\n    return {\n      register: function register(key) {\n        var currentKey = navigatorKeyRef.current;\n\n        if (currentKey !== undefined && key !== currentKey) {\n          throw new Error(MULTIPLE_NAVIGATOR_ERROR);\n        }\n\n        navigatorKeyRef.current = key;\n      },\n      unregister: function unregister(key) {\n        var currentKey = navigatorKeyRef.current;\n\n        if (key !== currentKey) {\n          return;\n        }\n\n        navigatorKeyRef.current = undefined;\n      }\n    };\n  }, []);\n  return React.createElement(SingleNavigatorContext.Provider, {\n    value: value\n  }, children);\n}","map":{"version":3,"sources":["EnsureSingleNavigator.tsx"],"names":["MULTIPLE_NAVIGATOR_ERROR","SingleNavigatorContext","React","children","navigatorKeyRef","value","register","currentKey","key","unregister"],"mappings":";;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,IAAMA,wBAAwB,GAA9B,0SAAA;AAEO,IAAMC,sBAAsB,GAAGC,KAAK,CAALA,aAAAA,CAA/B,SAA+BA,CAA/B;;;AAWQ,SAAA,qBAAA,OAAoD;AAAA,MAAnBC,QAAmB,QAAnBA,QAAmB;AACjE,MAAMC,eAAe,GAAGF,KAAK,CAA7B,MAAwBA,EAAxB;AAEA,MAAMG,KAAK,GAAG,KAAK,CAAL,OAAA,CACZ;AAAA,WAAO;AACLC,MAAAA,QADK,oBACG,GADH,EACiB;AACpB,YAAMC,UAAU,GAAGH,eAAe,CAAlC,OAAA;;AAEA,YAAIG,UAAU,KAAVA,SAAAA,IAA4BC,GAAG,KAAnC,UAAA,EAAoD;AAClD,gBAAM,IAAA,KAAA,CAAN,wBAAM,CAAN;AACD;;AAEDJ,QAAAA,eAAe,CAAfA,OAAAA,GAAAA,GAAAA;AARG,OAAA;AAULK,MAAAA,UAVK,sBAUK,GAVL,EAUmB;AACtB,YAAMF,UAAU,GAAGH,eAAe,CAAlC,OAAA;;AAEA,YAAII,GAAG,KAAP,UAAA,EAAwB;AACtB;AACD;;AAEDJ,QAAAA,eAAe,CAAfA,OAAAA,GAAAA,SAAAA;AACD;AAlBI,KAAP;AAAA,GADY,EAAd,EAAc,CAAd;AAwBA,SACE,KAAA,CAAA,aAAA,CAAC,sBAAD,CAAA,QAAA,EAAA;AAAiC,IAAA,KAAK,EAAEC;AAAxC,GAAA,EADF,QACE,CADF;AAKD","sourcesContent":["import * as React from 'react';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst MULTIPLE_NAVIGATOR_ERROR = `Another navigator is already registered for this container. You likely have multiple navigators under a single \"NavigationContainer\" or \"Screen\". Make sure each navigator is under a separate \"Screen\" container. See https://reactnavigation.org/docs/nesting-navigators for a guide on nesting.`;\n\nexport const SingleNavigatorContext = React.createContext<\n  | {\n      register(key: string): void;\n      unregister(key: string): void;\n    }\n  | undefined\n>(undefined);\n\n/**\n * Component which ensures that there's only one navigator nested under it.\n */\nexport default function EnsureSingleNavigator({ children }: Props) {\n  const navigatorKeyRef = React.useRef<string | undefined>();\n\n  const value = React.useMemo(\n    () => ({\n      register(key: string) {\n        const currentKey = navigatorKeyRef.current;\n\n        if (currentKey !== undefined && key !== currentKey) {\n          throw new Error(MULTIPLE_NAVIGATOR_ERROR);\n        }\n\n        navigatorKeyRef.current = key;\n      },\n      unregister(key: string) {\n        const currentKey = navigatorKeyRef.current;\n\n        if (key !== currentKey) {\n          return;\n        }\n\n        navigatorKeyRef.current = undefined;\n      },\n    }),\n    []\n  );\n\n  return (\n    <SingleNavigatorContext.Provider value={value}>\n      {children}\n    </SingleNavigatorContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}