{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useGestureHandlerRef;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _GestureHandlerRefContext = _interopRequireDefault(require(\"./GestureHandlerRefContext\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction useGestureHandlerRef() {\n  var ref = React.useContext(_GestureHandlerRefContext[\"default\"]);\n\n  if (ref === undefined) {\n    throw new Error(\"Couldn't find a ref for gesture handler. Are you inside a screen in Stack?\");\n  }\n\n  return ref;\n}","map":{"version":3,"sources":["useGestureHandlerRef.tsx"],"names":["ref","React","StackGestureRefContext"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,yBAAA,GAAA,sBAAA,CAAA,OAAA,8BAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,SAAA,oBAAA,GAAgC;AAC7C,MAAMA,GAAG,GAAGC,KAAK,CAALA,UAAAA,CAAiBC,yBAA7B,WAAYD,CAAZ;;AAEA,MAAID,GAAG,KAAP,SAAA,EAAuB;AACrB,UAAM,IAAA,KAAA,CAAN,4EAAM,CAAN;AAGD;;AAED,SAAA,GAAA;AACD","sourcesContent":["import * as React from 'react';\nimport StackGestureRefContext from './GestureHandlerRefContext';\n\nexport default function useGestureHandlerRef() {\n  const ref = React.useContext(StackGestureRefContext);\n\n  if (ref === undefined) {\n    throw new Error(\n      \"Couldn't find a ref for gesture handler. Are you inside a screen in Stack?\"\n    );\n  }\n\n  return ref;\n}\n"]},"metadata":{},"sourceType":"script"}