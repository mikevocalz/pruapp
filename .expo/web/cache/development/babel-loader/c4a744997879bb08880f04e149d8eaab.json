{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mikevocalz/pruapp/components/CustomHeader.tsx\";\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Appbar, Button } from \"react-native-paper\";\nimport { isMobile } from \"react-device-detect\";\nimport Logo from \"../components/logo\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar isMobileSz = width >= 640;\nvar breakpoint = 320;\n\nvar CustomHeader = function CustomHeader(_ref) {\n  var _jsx2, _jsx3, _jsx4, _jsx5, _jsx6, _jsx7, _jsx8, _jsx9, _jsx10, _jsx11;\n\n  var scene = _ref.scene,\n      previous = _ref.previous,\n      navigation = _ref.navigation;\n  var options = scene.descriptor.options;\n  var title = options.headerTitle !== undefined ? options.headerTitle : options.title !== undefined ? options.title : scene.route.name;\n\n  function renderMenuButton() {\n    if (width < 340) {\n      var _jsx;\n\n      __jsx(Appbar.Action, (_jsx = {\n        icon: \"menu\",\n        onPress: function onPress() {},\n        __self: this\n      }, _defineProperty(_jsx, \"__self\", this), _defineProperty(_jsx, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }), _jsx));\n    }\n  }\n\n  return __jsx(Appbar.Header, (_jsx11 = {\n    style: {\n      backgroundColor: \"red\",\n      marginHorizontal: 10\n    },\n    __self: _this\n  }, _defineProperty(_jsx11, \"__self\", _this), _defineProperty(_jsx11, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }), _jsx11), previous && __jsx(Appbar.BackAction, (_jsx2 = {\n    onPress: navigation.pop,\n    color: \"red\",\n    __self: _this\n  }, _defineProperty(_jsx2, \"__self\", _this), _defineProperty(_jsx2, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 20\n  }), _jsx2)), __jsx(View, (_jsx3 = {\n    style: {\n      display: isMobile ? \"block\" : \"none\"\n    },\n    __self: _this\n  }, _defineProperty(_jsx3, \"__self\", _this), _defineProperty(_jsx3, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }), _jsx3), renderMenuButton()), __jsx(Appbar.Content, (_jsx5 = {\n    titleStyle: {\n      textAlign: Platform.OS === \"web\" ? \"left\" : \"center\"\n    },\n    title: previous ? title : __jsx(Logo, (_jsx4 = {\n      width: 260,\n      height: 180,\n      __self: _this\n    }, _defineProperty(_jsx4, \"__self\", _this), _defineProperty(_jsx4, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }), _jsx4)),\n    __self: _this\n  }, _defineProperty(_jsx5, \"__self\", _this), _defineProperty(_jsx5, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }), _jsx5)), isMobileSz !== null && isMobileSz !== void 0 ? isMobileSz : __jsx(Appbar.Content, (_jsx10 = {\n    style: {\n      position: \"absolute\",\n      justifyContent: \"center\",\n      right: 0\n    },\n    title: __jsx(View, (_jsx9 = {\n      style: {\n        flexDirection: \"row\"\n      },\n      __self: _this\n    }, _defineProperty(_jsx9, \"__self\", _this), _defineProperty(_jsx9, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }), _jsx9), __jsx(Button, (_jsx6 = {\n      mode: \"text\",\n      onPress: function onPress() {\n        return console.log(\"Pressed\");\n      },\n      labelStyle: {\n        color: \"white\",\n        fontWeight: \"bold\"\n      },\n      __self: _this\n    }, _defineProperty(_jsx6, \"__self\", _this), _defineProperty(_jsx6, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }), _jsx6), \"Home\"), __jsx(Button, (_jsx7 = {\n      mode: \"text\",\n      onPress: function onPress() {\n        return console.log(\"Pressed\");\n      },\n      labelStyle: {\n        color: \"white\",\n        fontWeight: \"bold\"\n      },\n      __self: _this\n    }, _defineProperty(_jsx7, \"__self\", _this), _defineProperty(_jsx7, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }), _jsx7), \"Scan\"), __jsx(Button, (_jsx8 = {\n      mode: \"text\",\n      labelStyle: {\n        color: \"white\",\n        fontWeight: \"bold\"\n      },\n      onPress: function onPress() {\n        return console.log(\"Pressed\");\n      },\n      __self: _this\n    }, _defineProperty(_jsx8, \"__self\", _this), _defineProperty(_jsx8, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }), _jsx8), \"Timeline\")),\n    __self: _this\n  }, _defineProperty(_jsx10, \"__self\", _this), _defineProperty(_jsx10, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }), _jsx10)));\n};\n\nexport default CustomHeader;","map":{"version":3,"sources":["/Users/mikevocalz/pruapp/components/CustomHeader.tsx"],"names":["React","Appbar","Button","isMobile","Logo","Dimensions","get","width","height","isMobileSz","breakpoint","CustomHeader","scene","previous","navigation","options","descriptor","title","headerTitle","undefined","route","name","renderMenuButton","backgroundColor","marginHorizontal","pop","display","textAlign","Platform","OS","position","justifyContent","right","flexDirection","console","log","color","fontWeight"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Platform, Dimensions, Alert, Text, View} from \"react-native\";\nimport { Appbar, Avatar, Button, Paragraph, Dialog, Portal } from \"react-native-paper\";\nimport { SvgUri, SvgCssUri } from \"react-native-svg\";\nimport { isMobile, isBrowser } from \"react-device-detect\";\n\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport Logo from '../components/logo';\n\nexport interface AppProps { \n}\n\nconst { width, height } = Dimensions.get('window')\n\nconst isMobileSz =  width >= 640;\n      \n const breakpoint =  320;\n\nconst CustomHeader = ({ scene, previous, navigation }:any) => {\n  const { options } = scene.descriptor;\n  const title =\n    options.headerTitle !== undefined\n      ? options.headerTitle\n      : options.title !== undefined\n      ? options.title\n      : scene.route.name;\n\n       \n   function renderMenuButton() {\n        if(width < 340)\n        {\n              <Appbar.Action icon=\"menu\" onPress={() => {}} />\n        }\n        \n    }\n\n\n  return (\n    <Appbar.Header style={{ backgroundColor: \"red\", marginHorizontal: 10 }}>\n      {previous && <Appbar.BackAction onPress={navigation.pop} color={\"red\"} />}\n      {\n        <View\n          style={{\n            display: isMobile ? \"block\" : \"none\",\n          }}\n        >\n          {renderMenuButton()}\n        </View>\n      }\n\n      <Appbar.Content\n        titleStyle={{\n          textAlign: Platform.OS === \"web\" ? \"left\" : \"center\",\n        }}\n        title={\n          previous ? (\n            title\n          ) : (\n            // <Text>TEXT</Text>\n            <Logo width={260} height={180} />\n          )\n        }\n      />\n      {isMobileSz ?? (\n        <Appbar.Content\n          style={{\n            position: \"absolute\",\n            justifyContent: \"center\",\n            right: 0,\n          }}\n          title={\n            <View\n              style={{\n                flexDirection: \"row\",\n                //justifyContent: \"space-around\",\n              }}\n            >\n              <Button\n                mode=\"text\"\n                onPress={() => console.log(\"Pressed\")}\n                labelStyle={{ color: \"white\", fontWeight: \"bold\" }}\n              >\n                Home\n              </Button>\n              <Button\n                mode=\"text\"\n                onPress={() => console.log(\"Pressed\")}\n                labelStyle={{ color: \"white\", fontWeight: \"bold\" }}\n              >\n                Scan\n              </Button>\n              <Button\n                mode=\"text\"\n                labelStyle={{ color: \"white\", fontWeight: \"bold\" }}\n                onPress={() => console.log(\"Pressed\")}\n              >\n                Timeline\n              </Button>\n            </View>\n          }\n        />\n      )}\n    </Appbar.Header>\n  );\n};\n\n\nexport default CustomHeader;"]},"metadata":{},"sourceType":"module"}