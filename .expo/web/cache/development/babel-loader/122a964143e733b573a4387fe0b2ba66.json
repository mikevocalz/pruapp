{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mikevocalz/pruapp/components/CustomHeader.tsx\";\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Appbar, Button, Paragraph, Dialog, Portal } from \"react-native-paper\";\nimport Logo from \"../components/logo\";\n\nvar CustomHeader = function CustomHeader(_ref) {\n  var _jsx, _jsx2, _jsx3, _jsx4, _jsx5, _jsx6, _jsx7, _jsx8, _jsx9, _jsx10, _jsx11, _jsx12, _jsx13, _jsx14;\n\n  var scene = _ref.scene,\n      previous = _ref.previous,\n      navigation = _ref.navigation;\n  var options = scene.descriptor.options;\n  var title = options.headerTitle !== undefined ? options.headerTitle : options.title !== undefined ? options.title : scene.route.name;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var showDialog = function showDialog() {\n    return setVisible(true);\n  };\n\n  var hideDialog = function hideDialog() {\n    return setVisible(false);\n  };\n\n  return __jsx(Appbar.Header, (_jsx14 = {\n    style: {\n      backgroundColor: \"red\",\n      marginHorizontal: 10\n    },\n    __self: _this\n  }, _defineProperty(_jsx14, \"__self\", _this), _defineProperty(_jsx14, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }), _jsx14), __jsx(Portal, (_jsx7 = {\n    __self: _this\n  }, _defineProperty(_jsx7, \"__self\", _this), _defineProperty(_jsx7, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }), _jsx7), __jsx(Dialog, (_jsx6 = {\n    visible: visible,\n    onDismiss: hideDialog,\n    __self: _this\n  }, _defineProperty(_jsx6, \"__self\", _this), _defineProperty(_jsx6, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }), _jsx6), __jsx(Dialog.Title, (_jsx = {\n    __self: _this\n  }, _defineProperty(_jsx, \"__self\", _this), _defineProperty(_jsx, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 11\n  }), _jsx), \"Alert\"), __jsx(Dialog.Content, (_jsx3 = {\n    __self: _this\n  }, _defineProperty(_jsx3, \"__self\", _this), _defineProperty(_jsx3, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 11\n  }), _jsx3), __jsx(Paragraph, (_jsx2 = {\n    __self: _this\n  }, _defineProperty(_jsx2, \"__self\", _this), _defineProperty(_jsx2, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }), _jsx2), \"This is simple dialog\")), __jsx(Dialog.Actions, (_jsx5 = {\n    __self: _this\n  }, _defineProperty(_jsx5, \"__self\", _this), _defineProperty(_jsx5, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 11\n  }), _jsx5), __jsx(Button, (_jsx4 = {\n    onPress: hideDialog,\n    __self: _this\n  }, _defineProperty(_jsx4, \"__self\", _this), _defineProperty(_jsx4, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }), _jsx4), \"Done\")))), previous ? __jsx(Appbar.BackAction, (_jsx8 = {\n    onPress: navigation.pop,\n    color: \"red\",\n    __self: _this\n  }, _defineProperty(_jsx8, \"__self\", _this), _defineProperty(_jsx8, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }), _jsx8)) : __jsx(Appbar.Action, (_jsx9 = {\n    icon: \"menu\",\n    onPress: function onPress() {},\n    __self: _this\n  }, _defineProperty(_jsx9, \"__self\", _this), _defineProperty(_jsx9, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }), _jsx9)), __jsx(Appbar.Content, (_jsx11 = {\n    titleStyle: {\n      textAlign: Platform.OS === \"web\" ? \"left\" : \"center\"\n    },\n    title: previous ? title : __jsx(Logo, (_jsx10 = {\n      width: 260,\n      height: 180,\n      __self: _this\n    }, _defineProperty(_jsx10, \"__self\", _this), _defineProperty(_jsx10, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }), _jsx10)),\n    __self: _this\n  }, _defineProperty(_jsx11, \"__self\", _this), _defineProperty(_jsx11, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }), _jsx11)), __jsx(Appbar.Action, (_jsx12 = {\n    icon: \"magnify\",\n    onPress: function onPress() {},\n    __self: _this\n  }, _defineProperty(_jsx12, \"__self\", _this), _defineProperty(_jsx12, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }), _jsx12)), __jsx(Appbar.Content, (_jsx13 = {\n    title: \"Title\",\n    __self: _this\n  }, _defineProperty(_jsx13, \"__self\", _this), _defineProperty(_jsx13, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }), _jsx13)));\n};\n\nexport default CustomHeader;","map":{"version":3,"sources":["/Users/mikevocalz/pruapp/components/CustomHeader.tsx"],"names":["React","Appbar","Button","Paragraph","Dialog","Portal","Logo","CustomHeader","scene","previous","navigation","options","descriptor","title","headerTitle","undefined","route","name","useState","visible","setVisible","showDialog","hideDialog","backgroundColor","marginHorizontal","pop","textAlign","Platform","OS"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Platform, Alert, Text, View} from \"react-native\";\nimport { Appbar, Avatar, Button, Paragraph, Dialog, Portal } from \"react-native-paper\";\nimport { SvgUri, SvgCssUri } from \"react-native-svg\";\n\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport Logo from '../components/logo';\n\nexport interface AppProps { \n}\n\nconst CustomHeader = ({ scene, previous, navigation }:any) => {\n  const { options } = scene.descriptor;\n  const title =\n    options.headerTitle !== undefined\n      ? options.headerTitle\n      : options.title !== undefined\n      ? options.title\n      : scene.route.name;\n\n         const [visible, setVisible] = React.useState(false);\n\n         const showDialog = () => setVisible(true);\n\n         const hideDialog = () => setVisible(false);\n\n\n  return (\n    <Appbar.Header style={{ backgroundColor: \"red\", marginHorizontal: 10 }}>\n      <Portal>\n        <Dialog visible={visible} onDismiss={hideDialog}>\n          <Dialog.Title>Alert</Dialog.Title>\n          <Dialog.Content>\n            <Paragraph>This is simple dialog</Paragraph>\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={hideDialog}>Done</Button>\n          </Dialog.Actions>\n        </Dialog>\n      </Portal>\n      {previous ? (\n        <Appbar.BackAction onPress={navigation.pop} color={\"red\"} />\n      ) : (\n        <Appbar.Action icon=\"menu\" onPress={() => {}} />\n      )}\n      <Appbar.Content\n        titleStyle={{\n          textAlign: Platform.OS === \"web\" ? \"left\" : \"center\",\n        }}\n        title={\n          previous ? (\n            title\n          ) : (\n            // <Text>TEXT</Text>\n            <Logo width={260} height={180} />\n          )\n        }\n      />\n      <Appbar.Action icon=\"magnify\" onPress={() => {}} />\n      <Appbar.Content title=\"Title\" />\n    </Appbar.Header>\n  );\n};\n\n\nexport default CustomHeader;"]},"metadata":{},"sourceType":"module"}