{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mikevocalz/pruapp/components/CustomHeader.tsx\";\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Appbar, Avatar } from \"react-native-paper\";\nimport Logo from \"../components/logo\";\nundefined;\nvar avatar = \"https://res.cloudinary.com/teepublic/image/private/s--rjC8-HuL--/t_Resized%20Artwork/c_fit,g_north_west,h_1054,w_1054/co_ffffff,e_outline:53/co_ffffff,e_outline:inner_fill:53/co_bbbbbb,e_outline:3:1000/c_mpad,g_center,h_1260,w_1260/b_rgb:eeeeee/c_limit,f_jpg,h_630,q_90,w_630/v1555971626/production/designs/4695625_0.jpg\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar breakpoint = 420;\nvar isMobileSz = width <= breakpoint;\n\nvar CustomHeader = function CustomHeader(_ref) {\n  var _jsx, _jsx2, _jsx3, _jsx4, _jsx5, _jsx6, _jsx7, _jsx8;\n\n  var scene = _ref.scene,\n      previous = _ref.previous,\n      navigation = _ref.navigation;\n  var _scene$descriptor = scene.descriptor,\n      options = _scene$descriptor.options,\n      onPress = _scene$descriptor.onPress;\n  var title = options.headerTitle !== undefined ? options.headerTitle : options.title !== undefined ? options.title : scene.route.name;\n  return __jsx(Appbar.Header, (_jsx8 = {\n    style: {\n      backgroundColor: \"red\",\n      marginHorizontal: 10\n    },\n    __self: _this\n  }, _defineProperty(_jsx8, \"__self\", _this), _defineProperty(_jsx8, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }), _jsx8), previous && __jsx(Appbar.BackAction, (_jsx = {\n    onPress: navigation.pop,\n    color: \"red\",\n    __self: _this\n  }, _defineProperty(_jsx, \"__self\", _this), _defineProperty(_jsx, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 20\n  }), _jsx)), !isMobileSz && __jsx(Appbar.Action, (_jsx2 = {\n    icon: \"menu\",\n    onPress: function onPress() {\n      navigation.openDrawer();\n    },\n    __self: _this\n  }, _defineProperty(_jsx2, \"__self\", _this), _defineProperty(_jsx2, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }), _jsx2)), __jsx(Appbar.Content, (_jsx4 = {\n    titleStyle: {\n      textAlign: Platform.OS === \"web\" ? \"left\" : \"center\"\n    },\n    title: previous ? title : __jsx(Logo, (_jsx3 = {\n      width: 260,\n      height: 180,\n      __self: _this\n    }, _defineProperty(_jsx3, \"__self\", _this), _defineProperty(_jsx3, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }), _jsx3)),\n    __self: _this\n  }, _defineProperty(_jsx4, \"__self\", _this), _defineProperty(_jsx4, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }), _jsx4)), !isMobileSz && __jsx(Appbar.Content, (_jsx7 = {\n    style: {\n      position: \"absolute\",\n      justifyContent: \"center\",\n      right: 0\n    },\n    title: __jsx(TouchableOpacity, (_jsx6 = {\n      onPress: function onPress() {},\n      __self: _this\n    }, _defineProperty(_jsx6, \"__self\", _this), _defineProperty(_jsx6, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }), _jsx6), __jsx(Avatar.Image, (_jsx5 = {\n      size: 40,\n      style: {\n        borderColor: \"black\"\n      },\n      source: {\n        uri: avatar\n      },\n      __self: _this\n    }, _defineProperty(_jsx5, \"__self\", _this), _defineProperty(_jsx5, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }), _jsx5))),\n    __self: _this\n  }, _defineProperty(_jsx7, \"__self\", _this), _defineProperty(_jsx7, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }), _jsx7)));\n};\n\nexport default CustomHeader;","map":{"version":3,"sources":["/Users/mikevocalz/pruapp/components/CustomHeader.tsx"],"names":["React","Appbar","Avatar","Logo","undefined","avatar","Dimensions","get","width","height","breakpoint","isMobileSz","CustomHeader","scene","previous","navigation","descriptor","options","onPress","title","headerTitle","route","name","backgroundColor","marginHorizontal","pop","openDrawer","textAlign","Platform","OS","position","justifyContent","right","borderColor","uri"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB,QAAkE,oBAAlE;AAKA,OAAOC,IAAP;AAICC,SAAS;AAEV,IAAMC,MAAM,GACV,kUADF;;sBAE0BC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAlBC,K,mBAAAA,K;IAAOC,M,mBAAAA,M;;AACf,IAAMC,UAAU,GAAI,GAApB;AACA,IAAMC,UAAU,GAAIH,KAAK,IAAIE,UAA7B;;AAIA,IAAME,YAAY,GAAG,SAAfA,YAAe,OAA0C;AAAA;;AAAA,MAAvCC,KAAuC,QAAvCA,KAAuC;AAAA,MAAhCC,QAAgC,QAAhCA,QAAgC;AAAA,MAAtBC,UAAsB,QAAtBA,UAAsB;AAAA,0BAChCF,KAAK,CAACG,UAD0B;AAAA,MACrDC,OADqD,qBACrDA,OADqD;AAAA,MAC5CC,OAD4C,qBAC5CA,OAD4C;AAG7D,MAAMC,KAAK,GACTF,OAAO,CAACG,WAAR,KAAwBhB,SAAxB,GACIa,OAAO,CAACG,WADZ,GAEIH,OAAO,CAACE,KAAR,KAAkBf,SAAlB,GACAa,OAAO,CAACE,KADR,GAEAN,KAAK,CAACQ,KAAN,CAAYC,IALlB;AAQA,SACE,MAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,KAAnB;AAA0BC,MAAAA,gBAAgB,EAAE;AAA5C,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACGV,QAAQ,IAAI,MAAC,MAAD,CAAQ,UAAR;AAAmB,IAAA,OAAO,EAAEC,UAAU,CAACU,GAAvC;AAA4C,IAAA,KAAK,EAAE,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADf,EAEG,CAACd,UAAD,IACC,MAAC,MAAD,CAAQ,MAAR;AACE,IAAA,IAAI,EAAC,MADP;AAEA,IAAA,OAAO,EAIH,mBAAM;AAEHI,MAAAA,UAAU,CAACW,UAAX;AAGA,KAXP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,EAqBE,MAAC,MAAD,CAAQ,OAAR;AACE,IAAA,UAAU,EAAE;AACVC,MAAAA,SAAS,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,MAAxB,GAAiC;AADlC,KADd;AAIE,IAAA,KAAK,EACHf,QAAQ,GACNK,KADM,GAIN,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE,GAAb;AAAkB,MAAA,MAAM,EAAE,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aArBF,EAkCG,CAACR,UAAD,IACC,MAAC,MAAD,CAAQ,OAAR;AACE,IAAA,KAAK,EAAE;AACLmB,MAAAA,QAAQ,EAAE,UADL;AAELC,MAAAA,cAAc,EAAE,QAFX;AAGLC,MAAAA,KAAK,EAAE;AAHF,KADT;AAME,IAAA,KAAK,EACH,MAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE,mBAAM,CAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,MAAC,MAAD,CAAQ,KAAR;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,WAAW,EAAE;AADR,OAFT;AAKE,MAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE7B;AADC,OALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnCJ,CADF;AA2DD,CAtED;;AAyEA,eAAeO,YAAf","sourcesContent":["import * as React from 'react';\nimport { TouchableOpacity, Platform, Dimensions, Alert, Text, View} from \"react-native\";\nimport { Appbar, Avatar, Button, Paragraph, Dialog, Portal } from \"react-native-paper\";\nimport { SvgUri, SvgCssUri } from \"react-native-svg\";\nimport { isMobile, isMobileOnly } from \"react-device-detect\";\nimport { DrawerActions } from \"@react-navigation/native\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport Logo from '../components/logo';\n\nexport interface AppProps { \n  \n}undefined;\n\nconst avatar =\n  \"https://res.cloudinary.com/teepublic/image/private/s--rjC8-HuL--/t_Resized%20Artwork/c_fit,g_north_west,h_1054,w_1054/co_ffffff,e_outline:53/co_ffffff,e_outline:inner_fill:53/co_bbbbbb,e_outline:3:1000/c_mpad,g_center,h_1260,w_1260/b_rgb:eeeeee/c_limit,f_jpg,h_630,q_90,w_630/v1555971626/production/designs/4695625_0.jpg\";\nconst { width, height } = Dimensions.get('window')\nconst breakpoint =  420;\nconst isMobileSz =  width <= breakpoint;\n      \n\n\nconst CustomHeader = ({ scene, previous, navigation }: any) => {\n  const { options, onPress } = scene.descriptor;\n  \n  const title =\n    options.headerTitle !== undefined\n      ? options.headerTitle\n      : options.title !== undefined\n      ? options.title\n      : scene.route.name;\n\n\n  return (\n    <Appbar.Header style={{ backgroundColor: \"red\", marginHorizontal: 10 }}>\n      {previous && <Appbar.BackAction onPress={navigation.pop} color={\"red\"} />}\n      {!isMobileSz && (\n        <Appbar.Action\n          icon=\"menu\"\n        onPress={\n          //if onPress is available use that or call the usual navigation dispatch\n          // i also passed the navigation so that we can use it in our custom calls\n          \n            () => {\n             \n               navigation.openDrawer()\n        \n              \n              }\n        }\n       \n        \n        />\n      )}\n\n      <Appbar.Content\n        titleStyle={{\n          textAlign: Platform.OS === \"web\" ? \"left\" : \"center\",\n        }}\n        title={\n          previous ? (\n            title\n          ) : (\n            // <Text>TEXT</Text>\n            <Logo width={260} height={180} />\n          )\n        }\n      />\n      {!isMobileSz && (\n        <Appbar.Content\n          style={{\n            position: \"absolute\",\n            justifyContent: \"center\",\n            right: 0,\n          }}\n          title={\n            <TouchableOpacity onPress={() => {}}>\n              <Avatar.Image\n                size={40}\n                style={{\n                  borderColor: \"black\",\n                }}\n                source={{\n                  uri: avatar,\n                }}\n              />\n            </TouchableOpacity>\n          }\n        />\n      )}\n    </Appbar.Header>\n  );\n};\n\n\nexport default CustomHeader;"]},"metadata":{},"sourceType":"module"}