{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _MaterialCommunityIcon = _interopRequireDefault(require(\"../MaterialCommunityIcon\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar AppbarBackIcon = function AppbarBackIcon(_ref) {\n  var size = _ref.size,\n      color = _ref.color;\n  return _reactNative.Platform.OS === 'ios' ? React.createElement(_reactNative.View, {\n    style: [styles.wrapper, {\n      width: size,\n      height: size,\n      transform: [{\n        scaleX: _reactNative.I18nManager.isRTL ? -1 : 1\n      }]\n    }]\n  }, React.createElement(_reactNative.Image, {\n    source: require(\"../../assets/back-chevron.png\"),\n    style: [styles.icon, {\n      tintColor: color\n    }]\n  })) : React.createElement(_MaterialCommunityIcon[\"default\"], {\n    name: \"arrow-left\",\n    color: color,\n    size: size,\n    direction: _reactNative.I18nManager.isRTL ? 'rtl' : 'ltr'\n  });\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    height: 21,\n    width: 21,\n    resizeMode: 'contain'\n  }\n});\n\nvar _default = AppbarBackIcon;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["AppbarBackIcon.tsx"],"names":["AppbarBackIcon","color","styles","width","height","transform","scaleX","I18nManager","require","tintColor","wrapper","alignItems","justifyContent","icon","resizeMode"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAEA,IAAA,sBAAA,GAAA,sBAAA,CAAA,OAAA,4BAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAC,IAAD,QAAC,IAAD;AAAA,MAASC,KAAT,QAASA,KAAT;AAAA,SACrB,YAAA,CAAA,QAAA,CAAA,EAAA,KAAA,KAAA,GACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AACE,IAAA,KAAK,EAAE,CACLC,MAAM,CADD,OAAA,EAEL;AACEC,MAAAA,KAAK,EADP,IAAA;AAEEC,MAAAA,MAAM,EAFR,IAAA;AAGEC,MAAAA,SAAS,EAAE,CAAC;AAAEC,QAAAA,MAAM,EAAEC,YAAAA,CAAAA,WAAAA,CAAAA,KAAAA,GAAoB,CAApBA,CAAAA,GAAyB;AAAnC,OAAD;AAHb,KAFK;AADT,GAAA,EAUE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,KAAA,EAAA;AACE,IAAA,MAAM,EAAEC,OADV,iCAAA;AAEE,IAAA,KAAK,EAAE,CAACN,MAAM,CAAP,IAAA,EAAc;AAAEO,MAAAA,SAAS,EAAER;AAAb,KAAd;AAFT,GAAA,CAVF,CADF,GAiBE,KAAA,CAAA,aAAA,CAAC,sBAAD,WAAA,EAAA;AACE,IAAA,IAAI,EADN,YAAA;AAEE,IAAA,KAAK,EAFP,KAAA;AAGE,IAAA,IAAI,EAHN,IAAA;AAIE,IAAA,SAAS,EAAEM,YAAAA,CAAAA,WAAAA,CAAAA,KAAAA,GAAAA,KAAAA,GAA4B;AAJzC,GAAA,CAlBmB;AAAA,CAAvB;;AA0BA,IAAML,MAAM,GAAG,YAAA,CAAA,UAAA,CAAA,MAAA,CAAkB;AAC/BQ,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EADH,QAAA;AAEPC,IAAAA,cAAc,EAAE;AAFT,GADsB;AAK/BC,EAAAA,IAAI,EAAE;AACJT,IAAAA,MAAM,EADF,EAAA;AAEJD,IAAAA,KAAK,EAFD,EAAA;AAGJW,IAAAA,UAAU,EAAE;AAHR;AALyB,CAAlB,CAAf;;eAYed,c","sourcesContent":["import * as React from 'react';\nimport { Platform, I18nManager, View, Image, StyleSheet } from 'react-native';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\n\nconst AppbarBackIcon = ({ size, color }: { size: number; color: string }) =>\n  Platform.OS === 'ios' ? (\n    <View\n      style={[\n        styles.wrapper,\n        {\n          width: size,\n          height: size,\n          transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n        },\n      ]}\n    >\n      <Image\n        source={require('../../assets/back-chevron.png')}\n        style={[styles.icon, { tintColor: color }]}\n      />\n    </View>\n  ) : (\n    <MaterialCommunityIcon\n      name=\"arrow-left\"\n      color={color}\n      size={size}\n      direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n    />\n  );\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    height: 21,\n    width: 21,\n    resizeMode: 'contain',\n  },\n});\n\nexport default AppbarBackIcon;\n"]},"metadata":{},"sourceType":"script"}